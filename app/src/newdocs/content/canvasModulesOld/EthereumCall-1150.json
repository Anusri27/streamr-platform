{
  "id": 1150,
  "name": "EthereumCall",
  "path": "Integrations: Ethereum",
  "help": {
    "params": {
      "ethAccount": "The account used to make transaction or call",
      "function": "The contract function to invoke"
    },
    "paramNames": [
      "ethAccount",
      "function"
    ],
    "inputs": {
      "contract": "Ethereum contract",
      "trigger": "Send call (for functions that have no inputs)",
      "ether": "ETH to send with the function call (for *payable* functions)"
    },
    "inputNames": [
      "contract",
      "trigger",
      "ether"
    ],
    "outputs": {
      "errors": "List of error messages"
    },
    "outputNames": [
      "errors"
    ],
    "helpText": "Call Ethereum smart contract.  \n\nFirst, connect Ethereum contract into **contract**Â input. You can write your own using SolidityModule, or pick a template such as PayByUse.  \n\nSecond, choose the **function** you want to call from the dropdown. There are two kinds of functions calls:  \n\n\n- constant function calls that return results directly, and- transactions that return values through events that the function call invokes.\nThe contract must be deployed before this module can activate."
  }
}